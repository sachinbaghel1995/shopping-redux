{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiAction } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const res = await fetch(\"https://redux-database-830fe-default-rtdb.firebaseio.com/cart.json\");\n      if (!res.ok) throw new Error(\"Could not fetch cart data!\");\n      const data = await res.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      console.log(cartData);\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed.\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(uiAction.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data.\"\n    }));\n    const res = await fetch(\"https://redux-database-830fe-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cartData)\n    });\n    if (!res.ok) {\n      dispatch(uiAction.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed.\"\n      }));\n    }\n    dispatch(uiAction.showNotification({\n      status: \"success\",\n      title: \"Success!\",\n      message: \"Sent cart data successfully!\"\n    }));\n    const data = await res.json();\n  };\n};","map":{"version":3,"names":["cartActions","uiAction","fetchCartData","dispatch","fetchData","res","fetch","ok","Error","data","json","cartData","console","log","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","method","body","JSON","stringify"],"sources":["C:/Users/baghe/OneDrive/Desktop/new carrier/react/redux/reduxcart/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiAction } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\r\n        \"https://redux-database-830fe-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!res.ok) throw new Error(\"Could not fetch cart data!\");\r\n\r\n      const data = await res.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fetchData();\r\n      console.log(cartData);\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Fetching cart data failed.\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cartData) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiAction.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data.\",\r\n      })\r\n    );\r\n    const res = await fetch(\r\n      \"https://redux-database-830fe-default-rtdb.firebaseio.com/cart.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(cartData),\r\n      }\r\n    );\r\n\r\n    if (!res.ok) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed.\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(\r\n      uiAction.showNotification({\r\n        status: \"success\",\r\n        title: \"Success!\",\r\n        message: \"Sent cart data successfully!\",\r\n      })\r\n    );\r\n\r\n    const data = await res.json();\r\n  };\r\n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,oEAAoE,CACrE;MACD,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAE1D,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAC7B,OAAOD,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAE;MAClCQ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBR,QAAQ,CACNH,WAAW,CAACc,WAAW,CAAC;QACtBC,KAAK,EAAEJ,QAAQ,CAACI,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEL,QAAQ,CAACK;MAC1B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdd,QAAQ,CACNF,QAAQ,CAACiB,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIX,QAAQ,IAAK;EACxC,OAAO,MAAOR,QAAQ,IAAK;IACzBA,QAAQ,CACNF,QAAQ,CAACiB,gBAAgB,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CACrB,oEAAoE,EACpE;MACEiB,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ;IAC/B,CAAC,CACF;IAED,IAAI,CAACN,GAAG,CAACE,EAAE,EAAE;MACXJ,QAAQ,CACNF,QAAQ,CAACiB,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;IAEAlB,QAAQ,CACNF,QAAQ,CAACiB,gBAAgB,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMZ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;EAC/B,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}